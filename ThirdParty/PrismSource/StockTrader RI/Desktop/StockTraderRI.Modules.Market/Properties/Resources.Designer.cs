//===================================================================================
// Microsoft patterns & practices
// Composite Application Guidance for Windows Presentation Foundation and Silverlight
//===================================================================================
// Copyright (c) Microsoft Corporation.  All rights reserved.
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY
// OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT
// LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
// FITNESS FOR A PARTICULAR PURPOSE.
//===================================================================================
// The example companies, organizations, products, domain names,
// e-mail addresses, logos, people, places, and events depicted
// herein are fictitious.  No association with any real company,
// organization, product, domain name, email address, logo, person,
// places, or events is intended or should be inferred.
//===================================================================================
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockTraderRI.Modules.Market.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StockTraderRI.Modules.Market.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;MarketItems xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; RefreshRate=&quot;5&quot;&gt;
        ///  &lt;MarketItem TickerSymbol=&quot;STOCK0&quot; LastPrice=&quot;37.00&quot; Volume=&quot;1000&quot;&gt;&lt;/MarketItem&gt;
        ///  &lt;MarketItem TickerSymbol=&quot;STOCK1&quot; LastPrice=&quot;78.13&quot; Volume=&quot;100&quot;&gt;&lt;/MarketItem&gt;
        ///  &lt;MarketItem TickerSymbol=&quot;STOCK2&quot; LastPrice=&quot;23.80&quot; Volume=&quot;200&quot;&gt;&lt;/MarketItem&gt;
        ///  &lt;MarketItem TickerSymbol=&quot;STOCK3&quot; LastPrice=&quot;34.22&quot; Volume=&quot;300&quot;&gt;&lt;/MarketItem&gt;
        ///  &lt;MarketItem [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Market {
            get {
                return ResourceManager.GetString("Market", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symbol does not exist in market feed..
        /// </summary>
        internal static string MarketFeedTickerSymbolNotFoundException {
            get {
                return ResourceManager.GetString("MarketFeedTickerSymbolNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;MarketHistoryItems xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;MarketHistoryItem TickerSymbol=&quot;STOCK0&quot; Date=&quot;2008-02-23&quot;&gt;30.00&lt;/MarketHistoryItem&gt;
        ///  &lt;MarketHistoryItem TickerSymbol=&quot;STOCK0&quot; Date=&quot;2008-02-24&quot;&gt;35.00&lt;/MarketHistoryItem&gt;
        ///  &lt;MarketHistoryItem TickerSymbol=&quot;STOCK0&quot; Date=&quot;2008-02-25&quot;&gt;50.00&lt;/MarketHistoryItem&gt;
        ///  &lt;MarketHistoryItem TickerSymbol=&quot;STOCK0&quot; Date=&quot;2008-02-26&quot;&gt;75.00&lt;/MarketHistoryItem&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MarketHistory {
            get {
                return ResourceManager.GetString("MarketHistory", resourceCulture);
            }
        }
    }
}
